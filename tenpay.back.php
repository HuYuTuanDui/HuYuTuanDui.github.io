<?phpinclude "./inc/conn.php";//header('Content-type:text/html; Charset=utf-8');$mchid = $eq;  //微信支付商户号$appid = $xm;  //公众号APPID$apiKey = $ww; //帐户设置-安全设置-API安全-API密钥-设置API密钥if(strlen($mchid)<8){exit("终止:mchid 无效"); //appid无效}if(strlen($appid)<10){exit("终止:appid 无效"); //rsaKey无效}if(strlen($apiKey)<10){exit("终止:apiKey 无效"); //rsaKey无效}$wxPay = new WxpayService($mchid,$appid,$apiKey);$arary = $wxPay->notify();class WxpayService {protected $mchid;protected $appid;protected $apiKey;public function __construct($mchid, $appid, $key) {$this->mchid = $mchid;$this->appid = $appid;$this->apiKey = $key;}public function notify()  {$config = array('mch_id' => $this->mchid,'appid' => $this->appid,'key' => $this->apiKey,);$postStr = $GLOBALS["HTTP_RAW_POST_DATA"]; //得到回传信息 可能函数得升级$postObj = simplexml_load_string($postStr, 'SimpleXMLElement', LIBXML_NOCDATA);if ($postObj === false) {die('parse xml error'); 	//回传格式错误}if ($postObj->return_code != 'SUCCESS') {  //状态判断1$dologs = paylog("失败001","return_code");die($postObj->return_msg);}if ($postObj->result_code != 'SUCCESS') {  //状态判断2$dologs = paylog("失败002","result_code");die($postObj->err_code);}$arr = (array)$postObj;unset($arr['sign']); //去掉签名后对比if (self::getSign($arr, $config['key']) == $postObj->sign) { //回传数据签名验证成功//记录正确回执：可以改为你的业务流程比如根据订单号标记支付状态等$postObjx = json_encode($postObj);$tradeno = $postObj->out_trade_no;$dingfee = $postObj->total_fee;$dingfee = $dingfee/100;$db=ConnectMysqli::getIntance($conn);$sql="select * from `kudi` where `juan_isid` = '{$tradeno}'";$iz=$db->getRow($sql);if(!$iz){$dologs = paylog($tradeno,"注意{$uc}已付{$dingfee}未标记");}else{//正确读取订单$ih = $iz['ge'];$uc = $iz['le'];if($dingfee."_" == $ih."_"){}else{$dologs = paylog($dingfee."<{$tradeno}>".$ih,"注意{$uc}价格不一样");}//标记付费$mx = date("Y-m-d H:i:s");$list = array();$list['pe'] = "1";$list['ht'] = "'{$mx}'";$list['sq'] = "'{$postObjx}'";$list=$db->updata("kudi", $list," `juan_isid` = '{$tradeno}'");if($list){}else{$dologs = paylog($tradeno,"注意{$uc}状态标记失败");}}return $postObj;}}//获取签名public static function getSign($params, $key) {ksort($params, SORT_STRING);$unSignParaString = self::formatQueryParaMap($params, false);$signStr = strtoupper(md5($unSignParaString . "&key=" . $key));return $signStr;}//数组转queryprotected static function formatQueryParaMap($paraMap, $urlEncode = false)  {$buff = "";ksort($paraMap);foreach ($paraMap as $k => $v) {if (null != $v && "null" != $v) {if ($urlEncode) {$v = urlencode($v);}$buff .= $k . "=" . $v . "&";}}$reqPar = '';if (strlen($buff) > 0) {$reqPar = substr($buff, 0, strlen($buff) - 1);}return $reqPar;}}